#!/usr/bin/env bash
# -m {cluster.partition}"
source activate snakemake
set -e

if [ ! -d "cluster" ]; then
  mkdir cluster
fi

snakemake --version

curdir="$(pwd)"
jname="$(basename $curdir)"

# use bash getopt to use short flags
config='config.yaml'
snakefile='Snakefile'
dryrun=""
ACCOUNT="acc_als-omics"
MODE="False"

print_usage() {
  printf "Usage: ./snakejob -c config.yaml -s Snakefile\nOptions:\n\t-c config file\n\t-s Snakefile\n\t-n dry run mode\n\t-m mode (if snakefile has mode option in --config)\n\t-a which HPC account to run on (default: acc_als-omics)\n"
}

while getopts 'a:c:s:m:inh' flag; do
  case "${flag}" in
    c) config="${OPTARG}" ;;
    s) snakefile="${OPTARG}" ;;
    a) ACCOUNT="${OPTARG}" ;;
    m) MODE="${OPTARG}" ;;
    n) dryrun="-n" ;;
    h) print_usage
       exit 1 ;;
  esac
done


echo config used is $config
echo snakefile used is $snakefile

if [ ! -z "$dryrun" ];then
	echo "dry run mode"
fi

if [ ! -e $config ]; then
	echo "error: config file does not exist" 
	exit 0
fi

if [ ! -e $snakefile ]; then
	echo "error: snakefile does not exist"
	exit 0
fi
if [ ! -z "$MODE" ]; then
    echo "mode selected: $MODE"
    mode_variable=" --config mode=$MODE"
else
    mode_variable=""
fi

#exit 0 

bsub=("bsub -K -J $jname:{rule}:{wildcards}"
"-P $ACCOUNT "
"{cluster.himem}"
"-q {cluster.queue} "
"-n {cluster.cores} -R \"span[hosts=1] select[mem>{cluster.mem}]"
"rusage[mem={cluster.mem}]\" -W {cluster.time} " #-L /bin/bash#\"
"-oo cluster/{rule}_{wildcards}.stdout"
"-eo cluster/{rule}_{wildcards}.stderr < ")

echo ${bsub[*]}

snakemake -u cluster.yaml --cluster-sync "${bsub[*]}" \
  --use-conda --cores \
  --local-cores 4 --max-jobs-per-second 5 \
  --jobs 1000 --quiet \
  --rerun-incomplete \
  --restart-times 2 \
  -s $snakefile --configfile $config \
  --latency-wait 30 --rerun-incomplete --use-conda \
  $dryrun \
  $mode_variable
