
# Snakemake pipeline for combining data from multiple samples together

# where the scripts are - default within the pipeline folder
scriptFolder = "scripts/"

# where your RAPiD run is
inFolder = config['inFolder']

# where you want the output tables to go
outFolder = config['outFolder']

# for testing - two samples:
#inFolder = "/sc/orga/projects/als-omics/NYGC_ALS/pipelines/collate_samples/test"

# example - Swarup 
#inFolder = "/sc/orga/projects/als-omics/NYGC_ALS/big_Swarup_FTD/RAPiD-nf/"
#outFolder = "/sc/orga/projects/als-omics/NYGC_ALS/big_Swarup_FTD"

print("* Collating samples from a RAPiD run")

rule all:
    input: 
        outFolder + "gene_matrix.RData",
        outFolder + "tx_matrix.RData",
        #outFolder + "multiqc_report.html"
#       outFolder + "genes_counts_deseq.RData",
        #outFolder + "genes_counts_voom.RData"

rule getMatrices:
    output: 
        outFolder + "gene_matrix.RData",
        outFolder + "tx_matrix.RData"
    params:
        inFolder = inFolder,
        outFolder = outFolder,
        script = scriptFolder + "collate_tables.R"
    shell:
        "ml R/3.6.0;"
        "Rscript {params.script} {params.inFolder} {params.outFolder}"

rule multiQC:
    output:
        outFolder + "multiqc_report.html"
    params:
        out = outFolder + ""
    shell:
        "export LC_ALL=en_US.UTF-8; export LANG=en_US.UTF-8;"
        "export PS1=""; source activate differential-pipeline;"
        "multiqc  -f --outdir {params.out} {inFolder}"

        #"/hpc/packages/minerva-centos7/py_packages/3.7/bin/"

# take gene counts
# remove low count genes
# apply voom normalisation
# apply DESeq normalisation
# save objects separately
rule normalise_genes:
    input:
        outFolder + "gene_matrix.RData",
    output:
        outFolder + "genes_counts_voom.RData",
        outFolder + "genes_counts_deseq.RData" 
    params:
        out = outFolder + "",
        script = scriptFolder + "normalise_genes.R"
    shell:
        "ml R/3.6.0;"
        "Rscript {params.script} {input} {params.out}"  
