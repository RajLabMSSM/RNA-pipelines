import pandas as pd
import os
RWD = os.getcwd()
#inFolder = config['inFolder']
# create outFolder path using dataCode
#outFolder = config['outFolder'] + config['dataCode'] + '/'

refCondition = config['refCondition']
altCondition = config['altCondition']

outFolder = config['outFolder']
dataCode = config['dataCode']
# annotation
#refFolder = config['refFolder']
#refFile = config['refFile']
#refCode = config['refCode']

rapidVersion = config['rapidVersion']

metadata = config['metadata']
#bamSuffix = config['bamSuffix']

meta = pd.read_csv(metadata, sep = "\t")

samples = meta['sample']

# put together file paths
rsem_genes = meta['rapid_path'] + "/Processed/" + rapidVersion + "/rsem/" +  meta['sample'] + ".genes.results"
kallisto_counts = meta['rapid_path'] + "/Processed/" + rapidVersion + "/kallisto/abundance.h5"

# allow for choosing of modules
modules = config['modules']
target_files = [ outFolder + "config.yaml", metadata ]

print(modules)

# RSEM -> LIMMA
if modules['rsem_limma'] == True:
	rsem_out = outFolder + "limma_rsem/" + dataCode + "_results.RData"
	target_files.append(rsem_out)
	print("requested RSEM -> Limma")
#print(target_files)

# KALLISTO -> SLEUTH
if modules['kallisto_sleuth'] == True:
	kallisto_out = outFolder + "kallisto_sleuth/" + dataCode + "_results.RData"
	target_files.append(kallisto_out)
	print("requested Kallisto -> Sleuth")

if modules['report'] == True:
	report_inputs = []
	report_out = outFolder + "report/" + dataCode + "_report.html"
	target_files.append(report_out)
	print("requested HTML report")
	if modules['kallisto_sleuth'] == True:
		kallisto_out = outFolder + "kallisto_sleuth/" + dataCode + "_results.RData"
		report_inputs.append(kallisto_out)
	if modules['rsem_limma'] == True:
		rsem_out = outFolder + "limma_rsem/" + dataCode + "_results.RData"
		report_inputs.append(rsem_out)

localrules: copyConfig

rule all:
	input:
		target_files


rule copyConfig:
	input:
		config = workflow.overwrite_configfile,
		metadata = metadata

	output:
		config = outFolder + "config.yaml",
		metadata = outFolder + "samples.tsv"
	shell:
		"cp {input.config} {output.config};"
		"cp {input.metadata} {output.metadata}"

rule rsem_limma:
	input:
		expand( "{rsem_genes_file}", rsem_genes_file = rsem_genes)
	output:
		outFolder + "limma_rsem/" + dataCode + "_results.RData"
	params:
		outFolder = outFolder + "limma_rsem/",
		dataCode = dataCode,
		metadata = metadata,
		refCondition = refCondition,
		altCondition = altCondition
	shell:
		"ml R/3.6.0;"
		"Rscript scripts/rsem_limma.R "
		" --metadata {params.metadata} "
		" --outFolder {params.outFolder} "
		" --dataCode {params.dataCode} "
		" --refCondition {params.refCondition} "
		" --altCondition {params.altCondition} "
		" {input} "

rule kallisto_sleuth:
	input:
		expand( "{kallisto_count_files}", kallisto_count_files = kallisto_counts)
	output:
		outFolder + "kallisto_sleuth/" + dataCode + "_results.RData"
	params:
		t2g = "/sc/orga/projects/PBG/REFERENCES/GRCh38/Gencode/release_30/gencode.v30.primary_assembly.transcript_id.gene_name",
		outFolder = outFolder + "kallisto_sleuth/",
                dataCode = dataCode,
                metadata = metadata,
                refCondition = refCondition,
                altCondition = altCondition,
		rapidVersion = rapidVersion
	shell:
                "ml R/3.6.0;"
                "Rscript scripts/kallisto_sleuth.R "
		" --rapidVersion {params.rapidVersion} "
		" --t2g {params.t2g} "
                " --metadata {params.metadata} "
                " --outFolder {params.outFolder} "
                " --dataCode {params.dataCode} "
                " --refCondition {params.refCondition} "
                " --altCondition {params.altCondition} "
                " {input} "

rule differential_report:
	input:
		#outFolder + "kallisto_sleuth/" + dataCode + "_results.RData",
		outFolder + "limma_rsem/" + dataCode + "_results.RData"
	output:
		outFolder + "report/" + dataCode + "_report.html"
	params:
		script = "scripts/differential_report.Rmd",
		kallisto_folder = outFolder + "kallisto_sleuth/",
		rsem_folder = outFolder + "limma_rsem/",
		output_dir = outFolder + "report/",
		dataCode = dataCode,
		rwd = RWD,
		metadata = metadata,
		refCondition = refCondition,
		altCondition = altCondition,
		FDR = 0.05 # put in config.yaml
	shell: """
ml R/3.6.0; R -e 'rmarkdown::render(\
"{params.script}", clean = TRUE, \
output_file = "{output}", \
output_dir = "{params.output_dir}", \
params = list(rwd = "{params.rwd}", \
FDR = "{params.FDR}", \
kallisto_folder = "{params.kallisto_folder}", \
rsem_folder = "{params.rsem_folder}", \
dataCode = "{params.dataCode}", \
metadata = "{params.metadata}", \
refCondition = "{params.refCondition}", \
altCondition = "{params.altCondition}" \
))' --slave
		"""
